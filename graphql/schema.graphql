type User {
    id: ID!
    name: String!
    email: String!
    articles: [Article!]! @hasMany
}

type Article {
    id: ID!
    title: String!
    content: String!
    author: User! @belongsTo(relation: "user")
}

type Query {
    user(id: ID! @eq): User @find
    users: [User!]! @paginate
    article(id: ID! @eq): Article @find
    articles: [Article!]! @paginate
    me: User @auth(guard: "api")
}

type Mutation {
    createUser(
        name: String!
        email: String! @rules(apply: ["email", "unique:users"])
        password: String! @bcrypt @rules(apply: ["min:6"])
    ) : User @create

    createArticle(
        title: String!
        content: String!
    ) : Article
        @field(reolver: "ArticleMutator@create")
        @middleware (checks: ["auth:api"])


    login(
        email: String!
        password: String!
    ) : String 
        @field(resolver: "AuthMutator@resolve")
}